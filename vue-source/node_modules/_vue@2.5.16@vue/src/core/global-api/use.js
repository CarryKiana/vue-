/* @flow */

import { toArray } from '../util/index'

export function initUse (Vue: GlobalAPI) {
  // 注册Vue.use方法，Vue.use方法用于为Vue安装插件，this在这里指代Vue
  // this._installedPlugins用来存储注册过得插件,确保插件被多次安装时只安装一次
  // toArray方法把传入的类数组参数对象转换为真实数组（下标从1开始即除了plugin外的其余参数）
  // 之后再把Vue加入数组开头当作参数传入install方法
  // 调用插件的install方法
  // 返回this（链式调用或叫链模式）
  Vue.use = function (plugin: Function | Object) {
    const installedPlugins = (this._installedPlugins || (this._installedPlugins = []))
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    const args = toArray(arguments, 1)
    args.unshift(this)
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args)
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args)
    }
    installedPlugins.push(plugin)
    return this
  }
}
