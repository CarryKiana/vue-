/* @flow */

import { makeMap } from 'shared/util'

// these are reserved for web because they are directly compiled away
// during template compilation
// 这些是为web保留的，因为它们在模板编译期间就直接被编译掉了
// 判断是否是浏览器保留属性
export const isReservedAttr = makeMap('style,class')

// attributes that should be using props for binding
// 应该使用props进行绑定的属性
const acceptValue = makeMap('input,textarea,option,select,progress')
// 判断是否该使用prop
export const mustUseProp = (tag: string, type: ?string, attr: string): boolean => {
  // muted为video标签属性，有这个属性代表被静音
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
}
// 判断是否是枚举属性
export const isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck')
// 判断是否是布尔值的属性
export const isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,translate,' +
  'truespeed,typemustmatch,visible'
)
// 浏览器无法预知在XML文档中可调用何种超级链接元素，因此在XML文档中定义超级链接的方法就是在元素上放置可用作超级链接的标记
// 为了访问XLink的属性和特性，我们必须在文档的顶端声明XLink命名空间，XLink的命名空间是'http://www.w3.org/1999/xlink'
// 定义XLink命名空间
export const xlinkNS = 'http://www.w3.org/1999/xlink'
// 判断是否是XML超级链接,例如:<homepage xlink:type="simple" xlink:href="http://www.w3.org">Visit W3C</homepage>
export const isXlink = (name: string): boolean => {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
}
// 获取XLink的prop， 如xlink:type="simple"获取的是type="simple"
export const getXlinkProp = (name: string): string => {
  return isXlink(name) ? name.slice(6, name.length) : ''
}
// 判断属性值是否是假值
export const isFalsyAttrValue = (val: any): boolean => {
  return val == null || val === false
}
